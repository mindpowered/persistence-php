<?php
/**
 * Generated by Haxe 4.0.0
 */

namespace php\_Boot;

use \haxe\ds\StringMap;
use \php\Boot;

class HxEnum {
	/**
	 * @var StringMap
	 */
	static public $singletons;


	/**
	 * @var int
	 */
	public $index;
	/**
	 * @var mixed
	 */
	public $params;
	/**
	 * @var string
	 */
	public $tag;


	/**
	 * @param string $enumClass
	 * @param string $tag
	 * @param int $index
	 * 
	 * @return HxEnum
	 */
	static public function singleton ($enumClass, $tag, $index) {
		#/usr/share/haxe/std/php7/Boot.hx:579: characters 2-31
		$key = "" . ($enumClass??'null') . "::" . ($tag??'null');
		#/usr/share/haxe/std/php7/Boot.hx:581: characters 2-37
		$instance = (HxEnum::$singletons->data[$key] ?? null);
		#/usr/share/haxe/std/php7/Boot.hx:582: lines 582-585
		if ($instance === null) {
			#/usr/share/haxe/std/php7/Boot.hx:583: characters 31-40
			$tmp = $enumClass;
			#/usr/share/haxe/std/php7/Boot.hx:583: characters 3-53
			$instance = new $tmp($tag, $index);
			#/usr/share/haxe/std/php7/Boot.hx:584: characters 3-32
			HxEnum::$singletons->data[$key] = $instance;
		}
		#/usr/share/haxe/std/php7/Boot.hx:587: characters 2-17
		return $instance;
	}


	/**
	 * @param string $tag
	 * @param int $index
	 * @param mixed $arguments
	 * 
	 * @return void
	 */
	public function __construct ($tag, $index, $arguments = null) {
		#/usr/share/haxe/std/php7/Boot.hx:591: characters 2-16
		$this->tag = $tag;
		#/usr/share/haxe/std/php7/Boot.hx:592: characters 2-20
		$this->index = $index;
		#/usr/share/haxe/std/php7/Boot.hx:593: characters 11-62
		$tmp = null;
		#/usr/share/haxe/std/php7/Boot.hx:593: characters 11-62
		if ($arguments === null) {
			#/usr/share/haxe/std/php7/Boot.hx:593: characters 32-49
			$this1 = [];
			#/usr/share/haxe/std/php7/Boot.hx:593: characters 11-62
			$tmp = $this1;
		} else {
			#/usr/share/haxe/std/php7/Boot.hx:593: characters 11-62
			$tmp = $arguments;
		}
		#/usr/share/haxe/std/php7/Boot.hx:593: characters 2-62
		$this->params = $tmp;
	}


	/**
	 * @return string
	 */
	public function __toString () {
		#/usr/share/haxe/std/php7/Boot.hx:608: characters 2-19
		$result = $this->tag;
		#/usr/share/haxe/std/php7/Boot.hx:609: lines 609-612
		if (count($this->params) > 0) {
			#/usr/share/haxe/std/php7/Boot.hx:610: characters 3-87
			$strings = array_map(function ($item) {
				#/usr/share/haxe/std/php7/Boot.hx:610: characters 50-77
				return Boot::stringify($item);
			}, $this->params);
			#/usr/share/haxe/std/php7/Boot.hx:611: characters 3-53
			$result = ($result??'null') . (("(" . (implode(",", $strings)??'null') . ")")??'null');
		}
		#/usr/share/haxe/std/php7/Boot.hx:613: characters 2-15
		return $result;
	}


	/**
	 * @return string
	 */
	public function toString () {
		#/usr/share/haxe/std/php7/Boot.hx:600: characters 2-21
		return $this->__toString();
	}


	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


self::$singletons = new StringMap();
	}
}


Boot::registerClass(HxEnum::class, 'php._Boot.HxEnum');
HxEnum::__hx__init();
